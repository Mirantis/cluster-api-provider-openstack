name: release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

permissions:
  contents: write # Allow to create a release.

env:
  # Mirantis registry configuration for manifest generation
  PROD_REGISTRY: ghcr.io/mirantis
  IMAGE_NAME: cluster-api-provider-openstack

jobs:
  build:
    name: create draft release
    runs-on: ubuntu-latest
    steps:
      - name: Set env
        run:  echo "RELEASE_TAG=${GITHUB_REF:10}" >> $GITHUB_ENV
      - name: checkout code
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493 # tag=v5.0.0
        with:
          fetch-depth: 0
      - name: Calculate go version
        run: echo "go_version=$(make go-version)" >> $GITHUB_ENV
      - name: Set up Go
        uses: actions/setup-go@c0137caad775660c0844396c52da96e560aba63d # tag=v5.5.0
        with:
          go-version: ${{ env.go_version }}
      - name: generate release artifacts
        run: |
          make release
        env:
          REGISTRY: ${{ env.PROD_REGISTRY }}
          PROD_REGISTRY: ${{ env.PROD_REGISTRY }}
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
      - name: generate release notes
        # Ignore failures for release-notes generation so they could still get
        # generated manually before publishing.
        run: |
          make generate-release-notes || echo "Failed to generate release notes" >> _releasenotes/${{ env.RELEASE_TAG }}.md
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Release
        uses: softprops/action-gh-release@6da8fa9354ddfdc4aeace5fc48d7f679b5214090 # tag=v2.4.1
        with:
          draft: true
          files: out/*
          body_path: _releasenotes/${{ env.RELEASE_TAG }}.md
